<?xml version="1.0" encoding="UTF-8"?>
<!-- BoardDao interface와 똑같은 이름으로 xml파일을 만들기 -->

<!-- 경로 : src/main/resources/com.jwj.dao/BoardDao.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  mybatis를 사용하기 위해, 인터페이스 안에 있는 메소드(insert 등의 메소드)와 mybatis안의 메소드와 연결 해 주는 역할이 mapper -->
<!--  SQLSessionFactory를 이용해, 코드를 직접 작성 할 수 도 있지만, 더욱 편하게 SQL을 어떻게 처리할 지 별도의 설정을 해주고
		자동으로 처리되는 방식을 쓰는 것이 mapper.
		Mapper는 XML(여기서는 src/main/java/BoardDao.xml) + 인터페이스 (여기서는 src/main/resources/BoardDao.java) + annotation 
		이 3가지를 합쳐서 mapper를 작성 할 수 있다.-->

<mapper namespace = "com.jwj.dao.BoardDao"><!-- interface가 있는 package와 class를 써준다 -->

	<select id = "getList" resultType="com.jwj.dto.BoardDto">
	<!-- id는 인터페이스에서 사용할 변수이름, resultType은 해당 데이터를 넣을 Dto를 써줌 
			resultType의 반환 형태는 String,int 등의 데이터 1개가 됨. 인터페이스에서 쓰는 형태는 list이지만,
			가져오는 데이터 값은 묶음이 아닌 하나하나의 데이터로 취급. 즉 가져오는 데이터가 1개이면 그 형태이고 가져올 때는 list로 mybatis가 보내준다-->
	<![CDATA[
			SELECT * FROM BLIST_1
			WHERE RONUM>=#{pageNum}*10-9
			AND RONUM<=#{pageNum}*10
	]]><!-- xml 태그에 걸려, 특수문자가 처리가 안되는데, 특수문자를 써주고 싶을 때  <![CDATA[]]> 이 태그를 쓰면 그냥 문자열로 인식한다-->
		<!-- 여기서, 여러번 쓰이는 *가 의미가 다른데, mybatis에서 헷갈리지 않게 하기위해  <![CDATA[]]> 를 써준다. -->
		
	</select>
	
	<select id="getContents"  parameterType="Integer" resultType="com.jwj.dto.BoardDto" >
	<!-- parameterType bnum이라는 integer가 들어옴 - 생략 가능!! 위에는 생략 가능-->
		<!--  <![CDATA[ 를 안써도 되는 이유..?? 생각해보기-->
			SELECT * FROM BLIST_1
			WHERE BNUM=#{bnum}
	</select>
	<select id="getBoardCount" resultType="Integer" >
			SELECT COUNT(*) FROM BLIST_1
	</select>
	
	<insert id="boardInsert"  parameterType="com.jwj.dto.BoardDto"  useGeneratedKeys="true" keyProperty="bnum">
			<!-- parameterType은 정확하게 class를 지정해 주어야 함 -->
			<!-- resultType은 DB쪽에서 데이터를 가져와서 사용할 때 써줌. -->
			<!-- selectKey는 입력하기 전에 특정 키 값을 가져온 다음 그 값을 이용해서 처리하고 싶을 때 -->
			<!-- sequence를 쓸 때 Mybatis의 속성을 사용.
					밑의 sequence 구문을 이용하여 먼저 숫자를 생성하여 bnum에 집어 넣는다.  그냥 SELECT문에 넣어도 된다. 방식의 차이!-->
		<selectKey keyProperty="bnum" resultType="int" order="BEFORE">
			SELECT BOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey><!-- board 테이블의 시노님이 B -->
		INSERT INTO B VALUES (${bnum},#{btitle},#{bcontents},#{bid},DEFAULT,DEFAULT)
												<!-- 위의 bnum을 가져다 쓰기 때문에 $를 붙여준다. -->
	</insert>
		<!-- #과 $의 구분 
				# : 파라미터가 String 형태로 들어와서 자동으로 컬럼 타입으로 변경 
						변경된 파라미터 ->	숫자 : 10 , 문자열 '10'
				$ : 들어오는 파라미터 타입 그대로 사용 -> 보안 측면에서 #보다는 안 좋음 
					 수정하고 싶은 데이터의 컬럼명을 파라미터로 받아서 처리할 경우 사용.-->
		<!-- page가 1페이지면, 게시글을 1번부터 10번까지 가져오도록 함 -->
		<insert id="fileInsert" parameterType="HashMap">
			INSERT INTO BF VALUES(BF_SEQ.NEXTVAL, #{bnum}, #{oriFileName}, #{sysFileName})
		</insert>
		<select id="getBfList" parameterType="Integer" resultType="com.jwj.dto.BfileDto">
			SELECT * FROM BF WHERE BF_BNUM = #{bnum} 
		</select>
		
		<select id="getOriName" parameterType="String" resultType="String">
			SELECT BF_ORINAME FROM BF
			WHERE BF_SYSNAME=#{sysFileName}
		</select>
</mapper>







